trigger:
- main

variables:
  # Azure Container Registry (ACR) variables
  ACR_NAME: <ACR_NAME>
  IMAGE_TAG: $(Build.BuildId)

stages:
  - stage: Build
    displayName: Build and Push Docker Images
    jobs:
      - job: BuildPush
        displayName: Build and Push Images to ACR
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DockerInstaller@0
            displayName: Install Docker

          # Login to ACR
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(ACR_NAME)

          # Build and Push AuthService
          - task: Docker@2
            displayName: Build and Push AuthService
            inputs:
              command: buildAndPush
              repository: $(ACR_NAME)/authservice
              dockerfile: AuthService/Dockerfile
              tags: |
                $(IMAGE_TAG)

          # Build and Push ProjectService
          - task: Docker@2
            displayName: Build and Push ProjectService
            inputs:
              command: buildAndPush
              repository: $(ACR_NAME)/projectservice
              dockerfile: ProjectService/Dockerfile
              tags: |
                $(IMAGE_TAG)

          # Build and Push DeploymentHistoryService
          - task: Docker@2
            displayName: Build and Push DeploymentHistoryService
            inputs:
              command: buildAndPush
              repository: $(ACR_NAME)/deploymenthistoryservice
              dockerfile: DeploymentHistoryService/Dockerfile
              tags: |
                $(IMAGE_TAG)

          # Build and Push UserService
          - task: Docker@2
            displayName: Build and Push UserService
            inputs:
              command: buildAndPush
              repository: $(ACR_NAME)/userservice
              dockerfile: UserService/Dockerfile
              tags: |
                $(IMAGE_TAG)

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: Build
    jobs:
      - job: DeployToAKS
        displayName: Deploy Microservices to AKS
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: KubernetesManifest@0
            displayName: Deploy AuthService
            inputs:
              kubernetesServiceConnection: <Kubernetes_Service_Connection>
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/AuthService/authservice-deployment.yaml
              containers: |
                $(ACR_NAME)/authservice:$(IMAGE_TAG)

          - task: KubernetesManifest@0
            displayName: Deploy ProjectService
            inputs:
              kubernetesServiceConnection: <Kubernetes_Service_Connection>
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/ProjectService/projectservice-deployment.yaml
              containers: |
                $(ACR_NAME)/projectservice:$(IMAGE_TAG)

          - task: KubernetesManifest@0
            displayName: Deploy DeploymentHistoryService
            inputs:
              kubernetesServiceConnection: <Kubernetes_Service_Connection>
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/DeploymentHistoryService/deploymenthistoryservice-deployment.yaml
              containers: |
                $(ACR_NAME)/deploymenthistoryservice:$(IMAGE_TAG)

          - task: KubernetesManifest@0
            displayName: Deploy UserService
            inputs:
              kubernetesServiceConnection: <Kubernetes_Service_Connection>
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/UserService/userservice-deployment.yaml
              containers: |
                $(ACR_NAME)/userservice:$(IMAGE_TAG)
